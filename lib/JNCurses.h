/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class JNCurses */

#ifndef _Included_JNCurses
#define _Included_JNCurses
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     JNCurses
 * Method:    initscr
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_JNCurses_initscr
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    endwin
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNCurses_endwin
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    raw
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNCurses_raw
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    cbreak
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNCurses_cbreak
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    echo
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNCurses_echo
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    noecho
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNCurses_noecho
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    keypad
 * Signature: (Z)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_keypad
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     JNCurses
 * Method:    timeout
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_JNCurses_timeout
  (JNIEnv *, jobject, jint);

/*
 * Class:     JNCurses
 * Method:    addch
 * Signature: (B)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_addch
  (JNIEnv *, jobject, jbyte);

/*
 * Class:     JNCurses
 * Method:    mvaddch
 * Signature: (IIB)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_mvaddch
  (JNIEnv *, jobject, jint, jint, jbyte);

/*
 * Class:     JNCurses
 * Method:    echochar
 * Signature: (B)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_echochar
  (JNIEnv *, jobject, jbyte);

/*
 * Class:     JNCurses
 * Method:    addstr
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_addstr
  (JNIEnv *, jobject, jstring);

/*
 * Class:     JNCurses
 * Method:    addnstr
 * Signature: (Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_addnstr
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     JNCurses
 * Method:    mvaddstr
 * Signature: (IILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_mvaddstr
  (JNIEnv *, jobject, jint, jint, jstring);

/*
 * Class:     JNCurses
 * Method:    mvaddnstr
 * Signature: (IILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_mvaddnstr
  (JNIEnv *, jobject, jint, jint, jstring, jint);

/*
 * Class:     JNCurses
 * Method:    getch
 * Signature: ()B
 */
JNIEXPORT jbyte JNICALL Java_JNCurses_getch
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    getstr
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_JNCurses_getstr
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    refresh
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNCurses_refresh
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    erase
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNCurses_erase
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    clear
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNCurses_clear
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    clrtobot
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNCurses_clrtobot
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    clrtoeol
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNCurses_clrtoeol
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    move
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_move
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     JNCurses
 * Method:    curs_set
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_curs_1set
  (JNIEnv *, jobject, jint);

/*
 * Class:     JNCurses
 * Method:    border
 * Signature: (BBBBBBBB)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_border
  (JNIEnv *, jobject, jbyte, jbyte, jbyte, jbyte, jbyte, jbyte, jbyte, jbyte);

/*
 * Class:     JNCurses
 * Method:    box
 * Signature: (BB)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_box
  (JNIEnv *, jobject, jbyte, jbyte);

/*
 * Class:     JNCurses
 * Method:    vline
 * Signature: (BI)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_vline
  (JNIEnv *, jobject, jbyte, jint);

/*
 * Class:     JNCurses
 * Method:    hline
 * Signature: (BI)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_hline
  (JNIEnv *, jobject, jbyte, jint);

/*
 * Class:     JNCurses
 * Method:    has_colors
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_JNCurses_has_1colors
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    start_color
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNCurses_start_1color
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    init_pair
 * Signature: (SSS)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_init_1pair
  (JNIEnv *, jobject, jshort, jshort, jshort);

/*
 * Class:     JNCurses
 * Method:    COLOR_PAIR
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_COLOR_1PAIR
  (JNIEnv *, jobject, jint);

/*
 * Class:     JNCurses
 * Method:    init_color
 * Signature: (SSSS)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_init_1color
  (JNIEnv *, jobject, jshort, jshort, jshort, jshort);

/*
 * Class:     JNCurses
 * Method:    can_change_color
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_JNCurses_can_1change_1color
  (JNIEnv *, jobject);

/*
 * Class:     JNCurses
 * Method:    attron
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_attron
  (JNIEnv *, jobject, jint);

/*
 * Class:     JNCurses
 * Method:    attroff
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_attroff
  (JNIEnv *, jobject, jint);

/*
 * Class:     JNCurses
 * Method:    attrset
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_JNCurses_attrset
  (JNIEnv *, jobject, jint);

/*
 * Class:     JNCurses
 * Method:    beep
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_JNCurses_beep
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
